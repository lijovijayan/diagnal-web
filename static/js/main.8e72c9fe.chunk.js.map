{"version":3,"sources":["utils/action.utility.js","store/effects/movies.effect.js","store/actions/movies.action.js","store/reducers/movies.reducer.js","store/reducers/index.js","store/store.provider.js","components/lazy.image.js","components/appbar.js","components/card.js","containers/movies/index.js","App.js","reportWebVitals.js","index.js"],"names":["ActionUtility","type","payload","undefined","error","meta","MoviesEffect","pageNumber","searchKey","fetch","process","json","page","pageSize","totalRecords","movies","content","filter","movie","name","trim","toLowerCase","includes","Error","MoviesAction","dispatch","getState","a","createAction","SET_LOADER","fetchMovies","then","data","FETCH_MOVIES","catch","err","finally","_searchKey","SEARCH_MOVIES","initalState","loading","combineReducers","state","action","_movies","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","reducers","StoreProvider","children","placeHolder","LazyImage","src","alt","className","useState","imageSrc","setImageSrc","imageRef","setImageRef","observer","useRef","useEffect","current","IntersectionObserver","entries","forEach","entry","intersectionRatio","isIntersecting","unobserve","threshold","rootMargin","observe","ref","onLoad","event","target","classList","add","onError","draggable","searchIcon","backIcon","AppBar","onChange","title","showSearch","showSearchInput","handler","useCallback","debounce","class","e","value","placeholder","id","onClick","Card","imageURL","Movies","useDispatch","scrollRef","useSelector","haveNextPage","useMemo","scrollHeight","clientHeight","length","searchMovies","onScroll","scrollTop","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e72c9fe.chunk.js","sourcesContent":["export class ActionUtility {\n    static createAction(type, payload = undefined, error = false, meta = null) {\n        return {\n            type,\n            payload,\n            error,\n            meta\n        }\n    }\n}\n","export class MoviesEffect {\n    static async fetchMovies(pageNumber, searchKey) {\n        try {\n            const { page } = await (\n                await fetch(\n                    `${process.env.PUBLIC_URL}/repository/CONTENTLISTINGPAGE-PAGE${pageNumber}.json`\n                )\n            ).json()\n            return {\n                page: page['page-num-requested'],\n                pageSize: page['page-size-requested'],\n                totalRecords: page['total-content-items'],\n                movies: page['content-items'].content.filter((movie) =>\n                    movie.name\n                        .trim()\n                        .toLowerCase()\n                        .includes(searchKey.trim().toLowerCase())\n                ),\n                searchKey: searchKey\n            }\n        } catch (err) {\n            return new Error(err)\n        }\n    }\n}\n","import { ActionUtility } from '../../utils'\nimport { MoviesEffect } from '../effects'\n\nexport class MoviesAction {\n    static FETCH_MOVIES = 'MoviesAction.FETCH_MOVIES'\n    static SEARCH_MOVIES = 'MoviesAction.SEARCH_MOVIES'\n    static SET_LOADER = 'MoviesAction.SET_LOADER'\n\n    static fetchMovies(page) {\n        return async (dispatch, getState) => {\n            const {\n                movies: { searchKey }\n            } = getState()\n            dispatch(ActionUtility.createAction(MoviesAction.SET_LOADER, true))\n            MoviesEffect.fetchMovies(page, searchKey)\n                .then((data) => {\n                    dispatch(\n                        ActionUtility.createAction(\n                            MoviesAction.FETCH_MOVIES,\n                            data\n                        )\n                    )\n                })\n                .catch((err) => {\n                    dispatch(\n                        ActionUtility.createAction(\n                            MoviesAction.FETCH_MOVIES,\n                            {},\n                            err\n                        )\n                    )\n                })\n                .finally(() => {\n                    dispatch(\n                        ActionUtility.createAction(\n                            MoviesAction.SET_LOADER,\n                            false\n                        )\n                    )\n                })\n        }\n    }\n    static searchMovies(_searchKey) {\n        return async (dispatch, getState) => {\n            const {\n                movies: { searchKey }\n            } = getState()\n            if (_searchKey === searchKey) return\n            dispatch(ActionUtility.createAction(MoviesAction.SET_LOADER, true))\n            MoviesEffect.fetchMovies(1, _searchKey)\n                .then((data) => {\n                    dispatch(\n                        ActionUtility.createAction(\n                            MoviesAction.FETCH_MOVIES,\n                            data\n                        )\n                    )\n                })\n                .catch((err) => {\n                    dispatch(\n                        ActionUtility.createAction(\n                            MoviesAction.FETCH_MOVIES,\n                            {},\n                            err\n                        )\n                    )\n                })\n                .finally(() => {\n                    dispatch(\n                        ActionUtility.createAction(\n                            MoviesAction.SET_LOADER,\n                            false\n                        )\n                    )\n                })\n        }\n    }\n}\n","import { MoviesAction } from '../actions'\nconst initalState = {\n    page: 0,\n    pageSize: 20,\n    totalRecords: 0,\n    movies: [],\n    loading: false,\n    searchKey: ''\n}\n\nexport default function movies(state = initalState, action) {\n    switch (action.type) {\n        case MoviesAction.FETCH_MOVIES:\n            let _movies = state.movies\n            if (action.payload.movies && action.payload.page > 1) {\n                _movies = [..._movies, ...action.payload.movies]\n            } else {\n                _movies = action.payload.movies || []\n            }\n            return {\n                ...state,\n                ...action.payload,\n                movies: _movies\n            }\n        case MoviesAction.SET_LOADER:\n            return {\n                ...state,\n                loading: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport moviesReducer from './movies.reducer'\n\nexport default combineReducers({\n    movies: moviesReducer\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\n\nimport reducers from './reducers'\n\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware))\nconst store = createStore(reducers, composedEnhancer)\n\nfunction StoreProvider({ children }) {\n    return <Provider store={store}>{children}</Provider>\n}\n\nexport default StoreProvider\n","import React, { useState, useEffect, useRef } from 'react'\nimport '../styles/lazy.image.styles.scss'\n\nconst placeHolder =\n    process.env.PUBLIC_URL + '/images/placeholder_for_missing_posters.png'\n\nexport const LazyImage = ({ src, alt, className = '' }) => {\n    const [imageSrc, setImageSrc] = useState(placeHolder)\n    const [imageRef, setImageRef] = useState()\n    const observer = useRef()\n\n    const onLoad = (event) => {\n        event.target.classList.add('loaded')\n    }\n\n    const onError = (event) => {\n        event.target.classList.add('failed-loading')\n        setImageSrc(placeHolder)\n        observer.current?.unobserve(imageRef)\n        observer.current = null\n    }\n\n    useEffect(() => {\n        if (imageRef && imageSrc !== src && observer.current !== null) {\n            if (IntersectionObserver) {\n                observer.current = new IntersectionObserver(\n                    (entries) => {\n                        entries.forEach((entry) => {\n                            if (\n                                entry.intersectionRatio > 0 ||\n                                entry.isIntersecting\n                            ) {\n                                setImageSrc(src)\n                                observer.current.unobserve(imageRef)\n                            }\n                        })\n                    },\n                    {\n                        threshold: 0.01,\n                        rootMargin: '75%'\n                    }\n                )\n                observer.current.observe(imageRef)\n            } else {\n                setImageSrc(src)\n            }\n        }\n        return () => {\n            if (observer.current && observer.current.unobserve) {\n                observer.current.unobserve(imageRef)\n                observer.current = null\n            }\n        }\n    }, [src, imageSrc, imageRef])\n    return (\n        <img\n            className={`${className} lazy-image`}\n            ref={setImageRef}\n            src={imageSrc}\n            alt={alt}\n            onLoad={onLoad}\n            onError={onError}\n            draggable={false}\n        />\n    )\n}\n","import React, { useCallback, useState } from 'react'\nimport { debounce } from 'lodash'\nconst searchIcon = `${process.env.PUBLIC_URL}/images/search.png`\nconst backIcon = `${process.env.PUBLIC_URL}/images/Back.png`\n\nexport function AppBar({ onChange, title }) {\n    const [showSearch, showSearchInput] = useState(false)\n    const handler = useCallback(debounce(onChange, 500), [])\n\n    function onSwitchSearchIcon() {\n        if (showSearch) {\n            onChange('')\n        }\n        showSearchInput(!showSearch)\n    }\n\n    return (\n        <div\n            className={`search-bar flex flex-row items-center ${\n                showSearch ? 'show-search' : ''\n            }`}\n        >\n            <img\n                className={'back-icon ml-3'}\n                src={backIcon}\n                alt={'search'}\n                draggable={false}\n            />\n            <div className=\"flex-1 text-xl text-left flex flex-row justify-between items-center\">\n                <span className=\"pl-3 header-title\">{title}</span>\n                {showSearch && (\n                    <input\n                        type=\"text\"\n                        class=\"text-base search-input mx-3 px-3 flex-1\"\n                        onChange={(e) => handler(e.target.value)}\n                        placeholder=\"search here...\"\n                    />\n                )}\n            </div>\n            <img\n                id=\"searchIcon\"\n                className={'search-icon mr-3'}\n                src={searchIcon}\n                alt={'search'}\n                draggable={false}\n                onClick={onSwitchSearchIcon}\n            />\n        </div>\n    )\n}\n","import { LazyImage } from './lazy.image'\nexport function Card({ imageURL, name }) {\n    return (\n        <div className=\"movie-card flex flex-col xl:mb-6 lg:mb-6 md:mb-5 mb-4  xl:p-3 lg:p-3 md:p-2 p-2\">\n            <LazyImage src={imageURL} alt={name} className={'mb-1'} />\n            <div>{name}</div>\n            <div className=\"play-button\">\n                <div className=\"play\"></div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, AppBar } from '../../components'\nimport { MoviesAction } from '../../store/actions'\nimport '../../styles/home.styles.scss'\n\nexport function Movies() {\n    const dispatch = useDispatch()\n    const scrollRef = useRef(null)\n\n    const { movies, page, pageSize, totalRecords, searchKey } = useSelector(\n        (state) => state.movies\n    )\n    const haveNextPage = useMemo(\n        () => page * pageSize < totalRecords,\n        [page, pageSize, totalRecords]\n    )\n\n    useEffect(() => {\n        dispatch(MoviesAction.fetchMovies(1))\n    }, [dispatch])\n\n    useEffect(() => {\n        if (\n            scrollRef.current.scrollHeight <= scrollRef.current.clientHeight &&\n            searchKey?.length > 0 &&\n            haveNextPage\n        ) {\n            dispatch(MoviesAction.fetchMovies(+page + 1))\n        }\n    }, [dispatch, haveNextPage, movies, page, searchKey])\n\n    function onScroll() {\n        if (scrollRef.current) {\n            const { scrollTop, scrollHeight, clientHeight } = scrollRef.current\n            if (scrollTop + clientHeight === scrollHeight && haveNextPage) {\n                dispatch(MoviesAction.fetchMovies(+page + 1))\n            }\n        }\n    }\n\n    const onSearch = (_searchKey) => {\n        dispatch(MoviesAction.searchMovies(_searchKey))\n    }\n\n    function renderList() {\n        if (movies.length > 0) {\n            return (\n                <div className=\"grid 2xl:grid-cols-8 xl:grid-cols-6 lg:grid-cols-5 md:grid-cols-4 grid-cols-3 xl:gap-x-6 lg:gap-x-5 md:gap-x-4 gap-x-3\">\n                    {movies.map((movie) => (\n                        <Card\n                            imageURL={`${process.env.PUBLIC_URL}/images/${movie['poster-image']}`}\n                            name={movie.name}\n                        />\n                    ))}\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"flex items-center justify-center h-full w-full\">\n                    <span>No Results found !</span>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <>\n            <AppBar onChange={onSearch} title={'Romantic Comedy'} />\n            <div\n                ref={scrollRef}\n                className=\"home-container xl:px-12 lg:px-9 md:px-6 px-3\"\n                onScroll={() => onScroll()}\n            >\n                {renderList()}\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport StoreProvider from './store/store.provider'\n\nimport './styles/app.styles.scss'\nimport { Movies } from './containers/movies'\nfunction App() {\n    return (\n        <StoreProvider>\n            <div className=\"app-container\">\n                <Movies />\n            </div>\n        </StoreProvider>\n    )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}